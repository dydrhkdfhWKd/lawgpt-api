# -*- coding: utf-8 -*-
"""Untitled3.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1DEmDEvChjjLAZQs3LqTp0K0m0iGmb9QF
"""

from flask import Flask, request, jsonify
import xml.etree.ElementTree as ET
from urllib.request import urlopen
from urllib.parse import quote

app = Flask(__name__)

def law_search(query):
    if not query:
        return {"error": "쿼리를 입력해주세요."}

    try:
        keywords = query.strip().split()
        if not keywords:
            raise ValueError("쿼리에 키워드가 없습니다.")

        first_keyword = keywords[0]
        remaining_keywords = keywords[1:]

        encoded_query = quote(first_keyword)
        results = []
        max_results = 10
        page = 1

        while len(results) < max_results:
            # 한 페이지에 문서 1개씩만 가져오기
            url = f"http://www.law.go.kr/DRF/lawSearch.do?target=admrul&OC=gogohakj1558&type=XML&query={encoded_query}&display=1&page={page}"
            response = urlopen(url).read()
            xtree = ET.fromstring(response)

            admrul_list = xtree.findall("admrul")
            if not admrul_list:
                break  # 더 이상 문서 없음

            item = admrul_list[0]
            law_id = item.findtext("행정규칙일련번호")
            if not law_id:
                page += 1
                continue

            detail_url = f"http://www.law.go.kr/DRF/lawService.do?OC=gogohakj1558&target=admrul&ID={law_id}&type=XML"
            detail_response = urlopen(detail_url).read()
            detail_tree = ET.fromstring(detail_response)

            title = detail_tree.findtext("행정규칙기본정보/행정규칙명", default="제목 없음")
            content_nodes = detail_tree.findall("조문내용")
            combined_content = "\n\n".join([node.text.strip() for node in content_nodes if node.text])

            if not combined_content:
                page += 1
                continue

            if not remaining_keywords or all(k in combined_content for k in remaining_keywords):
                results.append({
                    "title": title,
                    "content": combined_content
                })

            page += 1  # 다음 문서로 넘어가기

        if not results:
            return {"message": "해당 키워드를 포함한 조문을 찾을 수 없습니다."}

        return results

    except Exception as e:
        return {
            "error": "예기치 못한 오류가 발생했습니다.",
            "details": str(e)
        }

@app.route('/law_search')
def law_search_route():
    query = request.args.get('query', '')
    result = law_search(query)
    return jsonify(result)

if __name__ == '__main__':
    app.run(debug=True)