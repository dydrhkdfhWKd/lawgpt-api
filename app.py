# -*- coding: utf-8 -*-
"""Untitled3.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1DEmDEvChjjLAZQs3LqTp0K0m0iGmb9QF
"""

from flask import Flask, request, Response
import xml.etree.ElementTree as ET
from urllib.request import urlopen
from urllib.parse import quote  # ✅ 한글 인코딩 처리 추가
import json

app = Flask(__name__)  # ❗ 반드시 있어야 하는 부분

@app.route('/')
def home():
    return "🔥 LawGPT 서버 실행 중입니다!"

@app.route('/law_search', methods=['GET'])
def law_search():
    query = request.args.get('query')
    if not query:
        return Response(json.dumps({"error": "쿼리를 입력해주세요."}, ensure_ascii=False),
                        content_type="application/json; charset=utf-8")

    try:
        # ✅ 한글 쿼리 URL 인코딩
        encoded_query = quote(query)
        url = f"http://www.law.go.kr/DRF/lawSearch.do?target=admrul&OC=gogohakj1558&type=XML&query={encoded_query}"
        response = urlopen(url).read()
        xtree = ET.fromstring(response)

        results = []
        for i in xtree[8:]:
            law_id = i[0].text
            law_url = f"http://www.law.go.kr/DRF/lawService.do?OC=gogohakj1558&target=admrul&ID={law_id}&type=XML"
            law_response = urlopen(law_url).read()
            law_tree = ET.fromstring(law_response)

            for clause in law_tree[1:]:
                if clause.tag == "조문내용" and clause.text:
                    results.append({
                        "title": law_tree[0][1].text,
                        "content": clause.text
                    })

        return Response(json.dumps(results, ensure_ascii=False),
                        content_type="application/json; charset=utf-8")

    except Exception as e:
        return Response(json.dumps({
            "error": "예기치 못한 오류가 발생했습니다.",
            "details": str(e)
        }, ensure_ascii=False),
            content_type="application/json; charset=utf-8")